/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) {
        if(!root) return {};

        
        vector<int> results;
        
        stack<Node *> s;
        s.push(root);
        
        while(!s.empty()){
            Node * current = s.top();
            s.pop();
            
            results.push_back(current->val);
            
            for(auto it : current->children){
                s.push(it);
            }
        }        
        
        reverse(results.begin(), results.end());
        return results;
    }
};