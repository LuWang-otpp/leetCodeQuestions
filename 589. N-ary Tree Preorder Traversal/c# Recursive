/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val,IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
    public IList<int> Preorder(Node root) {
        IList<int> results = new List<int>();
        
        if(root == null) return results;
        
        Stack<Node> s = new Stack<Node>();
        s.Push(root);
        
        while(s.Count > 0){
            Node tmp = s.Pop();
            results.Add(tmp.val);
            foreach(Node child in tmp.children.Reverse()){
                s.Push(child);
            }
        }
        
        return results;
    }
}