/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        if(root == NULL) return {};
        
        vector<int> results;
        
        stack<Node *> s;
        s.push(root);
        
        while(!s.empty()){
            Node * topNode = s.top();
            s.pop();
            
            results.push_back(topNode->val);
            
            for (vector<Node*>::reverse_iterator iter = topNode->children.rbegin(); iter != topNode->children.rend(); iter++) {
                s.push(*iter);
            }
        }
        
        return results;
    }
};