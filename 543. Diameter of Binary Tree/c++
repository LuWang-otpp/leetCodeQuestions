/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int result = 0;
    
    int diameterOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        
        findMaxEdgeBetween(root);
        
        return result;
    }
    
    int findMaxEdgeBetween(TreeNode* root){
        if(!root) return 0;
        
        int lMax = findMaxEdgeBetween(root->left);
        int rMax = findMaxEdgeBetween(root->right);
        
        result = max({result, lMax + rMax});    
        
        
        return max(lMax, rMax) + 1;
    }
    
};