/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(!root) return true;
        
        bool balanced = true;
        check(balanced, root);
        
        return balanced;
    }
    
    int check(bool& balanced, TreeNode * root){
        if(!root) return 0;
        
        int l = check(balanced, root->left);
        
        if(!balanced) return 0;
        
        int r = check(balanced, root->right);
        
        if(!balanced) return 0;
        
        if(abs(l - r)> 1) {
            balanced = false;
            return 0;
        }else{
            return max(l, r)+1;
        }
    }
};