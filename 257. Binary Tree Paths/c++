/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> result;
    
    vector<string> binaryTreePaths(TreeNode* root) {
        if(!root) return {};
        
        binaryTreePaths(root, "");
        
        return result;
    }
    
    void binaryTreePaths(TreeNode* root, string cur_path){       
        if(cur_path == ""){ 
            cur_path =  to_string(root->val);
        }else{
            cur_path = cur_path + "->" + to_string(root->val);
        }
        
        if(root->left == NULL && root->right==NULL){

            result.push_back(cur_path);
            return;
        }
        
        if(root->left != NULL) binaryTreePaths(root->left, cur_path);
        if(root->right != NULL) binaryTreePaths(root->right, cur_path);
    }
};