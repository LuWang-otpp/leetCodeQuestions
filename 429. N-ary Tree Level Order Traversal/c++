/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
         if(root == NULL){
             return {};
         }        
        
        vector<vector<int>> results;
        queue<Node *> q;
        q.push(root);
        
        while(!q.empty()){
            int size = q.size();
            vector<int> tmp;
            
            while(size--){
                Node * firstNode = q.front();
                q.pop();
                tmp.push_back(firstNode->val);
                
                for(Node* n : firstNode->children ){
                    q.push(n);
                }
            }
            
            results.push_back(tmp);
        }
        
        return results;
    }
};