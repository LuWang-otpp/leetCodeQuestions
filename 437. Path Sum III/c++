/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pathSum(TreeNode* root, int sum) {
        if(!root) return 0;
        
        sum_map = {{0,1}};
        
        pathSum(root, sum, 0);
        
        return result;
    }
    
    private:
    int result = 0;
    unordered_map<int, int> sum_map;
        
    void pathSum(TreeNode* root, int sum, int cur_sum){
        if(!root) return;
        
        cur_sum += root->val;
        result += sum_map[cur_sum - sum];
        sum_map[cur_sum]++;
        
        pathSum(root->left, sum, cur_sum);
        pathSum(root->right, sum, cur_sum);
        sum_map[cur_sum]--;
    }
};