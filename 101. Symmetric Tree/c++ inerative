/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(!root) return true;
        
        queue<TreeNode*> q;
        q.push(root);
        q.push(root);
        
        while(!q.empty()){
            TreeNode* cLeft = q.front();
            q.pop();
            TreeNode* cRight = q.front();
            q.pop();
            
            if(cLeft == NULL && cRight == NULL) continue;
            if(cLeft == NULL || cRight ==NULL) return false;
            
            if(cLeft->val != cRight->val)return false;

            
            q.push(cLeft->left);
            q.push(cRight->right);
            q.push(cLeft->right);           
            q.push(cRight->left);
            
        }
        return true;
    }
};