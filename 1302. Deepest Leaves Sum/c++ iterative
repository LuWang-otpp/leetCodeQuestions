/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        if(!root) return 0;
        
        int result = 0;
        
        queue<TreeNode*> s;
        s.push(root);
        int y = 0;
        
        while(!s.empty()){

            result = 0;
            y = s.size();

            while(y > 0){

                y--;
                TreeNode* current = s.front();
                s.pop();
                
                result += current->val;
                
                if(current->left != NULL){
                    s.push(current->left);
                }   
                if(current->right != NULL){
                    s.push(current->right);
                } 

            }
        
        }
        return result;
    }    
};