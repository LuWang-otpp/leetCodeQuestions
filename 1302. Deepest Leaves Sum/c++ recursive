/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        if(!root) return 0;
        
        int result = 0;
        int y_max = 0;
        
        map<int, int> lookup;
        
        helper(root, 0, y_max, lookup);
        
        return lookup[y_max];
    }
    
    void helper(TreeNode* root,
                int y,
                int& y_max,
                map<int, int>& lookup){
        if(!root) return;
        
        lookup[y] += root->val;
        y_max = max(y, y_max);
        
        helper(root->left, y+1, y_max, lookup);
        helper(root->right, y+1, y_max, lookup);
    }
};